%% Initialization
clearvars; clc;

addpath(genpath(fullfile('..','libs')));
addpath(fullfile('..','cache'));

%% Parameter Setup
% Amount of drift velocities linearly sampled from 25 to 125m/s
drift_velocities_amount = 1;
% Amount of carrier-to-noise ratio values varying from 25 to 45 dB-Hz
carrier_to_noise_ratios_amount = 1;

monte_carlo_runs = 1;
% Mask angle for the line-of-sight satellites
mask_angle_deg = 15;

data_set_params = get_dataset_params(drift_velocities_amount, carrier_to_noise_ratios_amount, mask_angle_deg);

cities_str_array = string(fieldnames(data_set_params.specific));

severity_str_array = string(fieldnames(data_set_params.general.irr_params));
receiver_sampling_frequency = 2e7;
B = receiver_sampling_frequency/2;
rx_mean_power = 1;

frequency_str_array = ["L1", "L2", "L5"];

filename = "simplified_cpsm_dataset.h5";

hdf5_file_attributes = struct(...
    'date_time', data_set_params.general.date_time, ...
    'speed_of_light', data_set_params.general.c, ...
    'gps_bands', data_set_params.general.gps_bands, ...
    'sampling_interval_after_correlation', data_set_params.general.dt, ...
    'simulation_time', data_set_params.general.simulation_time, ...
    'ionospheric_piercing_point_height', data_set_params.general.ipp_height, ...
    'drift_velocities_amount', data_set_params.general.drift_velocities_amount, ...
    'drift_velocities', data_set_params.general.drift_velocities(2,:), ...
    'carrier_to_noise_ratios_amount', data_set_params.general.carrier_to_noise_ratios_amount, ...
    'carrier_to_noise_ratios', data_set_params.general.carrier_to_noise_ratios);

new_filename = initialize_hdf5_file(filename,cities_str_array.', hdf5_file_attributes);

% Counter used for changing the value of the seed for random number
% generation.
seed_counter = 0;
%% Main loop

for city_str = cities_str_array.'
    city_attributes = struct( ...
        'rx_init_llh_radians', data_set_params.specific.(city_str).rx_init_llh, ...
        'rx_velocity_m_per_sec', data_set_params.specific.(city_str).rx_velocity, ...
        'prn_str_array', data_set_params.specific.(city_str).prn_string_array);
    set_city_group_attributes(new_filename, city_str, city_attributes);

    for prn_str = data_set_params.specific.(char(city_str)).prn_string_array
        for drift_idx = 1:drift_velocities_amount
            for severity_str = severity_str_array.'
                for carrier_to_noise_ratio = data_set_params.general.carrier_to_noise_ratios
                    for mc_run = 1 : monte_carlo_runs
                        num_samples = data_set_params.general.simulation_time / data_set_params.general.dt;
                        real_received_signal_single_array = zeros(num_samples, numel(frequency_str_array), 'single');
                        imag_received_signal_single_array = zeros(num_samples, numel(frequency_str_array), 'single');
                        labels_struct = struct('label_L1', string(), 'label_L2', string(), 'label_L5', string());
                        for frequency_str = frequency_str_array

                            frequency_idx = find(frequency_str_array == frequency_str);

                            thermal_noise_single_array = get_thermal_noise( ...
                                data_set_params.general.simulation_time, ...
                                data_set_params.general.dt, ...
                                rx_mean_power, ...
                                carrier_to_noise_ratio, ...
                                B, ...
                                'data_type', 'single');

                            U_str = ['U_', char(frequency_str)];
                            mu0_str = ['mu0_', char(frequency_str)];
                            irr_params.U = data_set_params.general.irr_params.(severity_str).(U_str);
                            irr_params.mu0 = data_set_params.general.irr_params.(severity_str).(mu0_str);
                            irr_params.p1 = data_set_params.general.irr_params.(severity_str).p1;
                            irr_params.p2 = data_set_params.general.irr_params.(severity_str).p2;
                            
                            rhof_veff_ratio_str = ['rhof_veff_ratio_', char(frequency_str)];
                            rhof_veff_ratio = data_set_params.specific.(city_str).rhof_veff_table{drift_idx, prn_str}.(rhof_veff_ratio_str);

                            scint_single_array = get_scintillation_time_series( ...
                                data_set_params.general, ...
                                irr_params, ...
                                rhof_veff_ratio, ...
                                seed_counter, ...
                                'data_type', 'single');
                            
                            scint_single_array_sliced = scint_single_array(1:data_set_params.general.simulation_time/data_set_params.general.dt).';
                            
                            label_string = ['label_', char(frequency_str)];

                            labels_struct.(label_string) = get_label_scint(scint_single_array_sliced, data_set_params.general.dt, 'lower_time', 0.5, 'upper_time', 2.0);

                            received_signal_single_array = scint_single_array_sliced + thermal_noise_single_array;
                            
                            real_received_signal_single_array(:,frequency_idx) = real(received_signal_single_array);
                            imag_received_signal_single_array(:,frequency_idx) = imag(received_signal_single_array);
                        end
                        received_signal_single_array_attributes = struct( ...
                            'label_L1', labels_struct.label_L1, ...
                            'label_L2', labels_struct.label_L2, ...
                            'label_L5', labels_struct.label_L5, ...
                            'prn', prn_str, ...
                            'drift_velocity', data_set_params.general.drift_velocities(2,drift_idx), ...
                            'carrier_to_noise_ratio', carrier_to_noise_ratio, ...
                            'severity', severity_str, ...
                            'monte_carlo_run', mc_run, ...
                            'rhof_veff_ratio_L1', data_set_params.specific.(city_str).rhof_veff_table{drift_idx, prn_str}.rhof_veff_ratio_L1, ...
                            'rhof_veff_ratio_L2', data_set_params.specific.(city_str).rhof_veff_table{drift_idx, prn_str}.rhof_veff_ratio_L2, ...
                            'rhof_veff_ratio_L5', data_set_params.specific.(city_str).rhof_veff_table{drift_idx, prn_str}.rhof_veff_ratio_L5, ...
                            'p1', data_set_params.general.irr_params.(severity_str).p1, ...
                            'p2', data_set_params.general.irr_params.(severity_str).p2, ...
                            'U_L1', data_set_params.general.irr_params.(severity_str).U_L1, ...
                            'mu0_L1', data_set_params.general.irr_params.(severity_str).mu0_L1, ...
                            'U_L2', data_set_params.general.irr_params.(severity_str).U_L2, ...
                            'mu0_L2', data_set_params.general.irr_params.(severity_str).mu0_L2, ...
                            'U_L5', data_set_params.general.irr_params.(severity_str).U_L5, ...
                            'mu0_L5', data_set_params.general.irr_params.(severity_str).mu0_L5);
                        write_received_signal_to_hdf5(new_filename, ...
                                city_str, ...
                                real_received_signal_single_array, ...
                                imag_received_signal_single_array, ...
                                received_signal_single_array_attributes, ...
                                'chunk_size', [10000, 3], ...
                                'deflate_level', 4);
                        seed_counter = seed_counter + 1;
                    end
                end
            end
        end
    end
end